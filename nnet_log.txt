> nn <- nnet(k_norm ~ x0_norm + x1_norm + x2_norm + x3_norm + x4_norm + x5_norm + x6_norm, data = obj,
+            subset = sampidx, size = 10, decay = 1.0e-5, maxit = 10)
# weights:  91
initial  value 11161.856443 
iter  10 value 7423.864815
final  value 7423.864815 
stopped after 10 iterations
> mean((predict(nn, obj[-sampidx, ]) - obj[-sampidx, ]$k_norm)^2)
[1] 0.06091619
> nn <- nnet(k_norm ~ x0_norm + x1_norm + x2_norm + x3_norm + x4_norm + x5_norm + x6_norm, data = obj,
+            subset = sampidx, size = 10, decay = 1.0e-5, maxit = 50)
# weights:  91
initial  value 11167.868721 
iter  10 value 7404.872969
iter  20 value 7254.692025
iter  30 value 7102.210487
iter  40 value 6804.160245
iter  50 value 5790.154279
final  value 5790.154279 
stopped after 50 iterations
> mean((predict(nn, obj[-sampidx, ]) - obj[-sampidx, ]$k_norm)^2)
[1] 0.04610765
> # Function of activation: L/1 + e^(-k*(x-x0)) - logistic function
> nn <- nnet(k_norm ~ x0_norm + x1_norm + x2_norm + x3_norm + x4_norm + x5_norm + x6_norm, data = obj,
+            subset = sampidx, size = 10, decay = 1.0e-5, maxit = 100)
# weights:  91
initial  value 20348.724286 
iter  10 value 7441.533451
iter  20 value 7010.098041
iter  30 value 6121.927860
iter  40 value 4670.940233
iter  50 value 4419.733892
iter  60 value 4308.787164
iter  70 value 4225.578009
iter  80 value 3960.558507
iter  90 value 3863.879336
iter 100 value 3745.381418
final  value 3745.381418 
stopped after 100 iterations
> mean((predict(nn, obj[-sampidx, ]) - obj[-sampidx, ]$k_norm)^2)
[1] 0.02904595